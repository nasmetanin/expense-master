/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Expense, MenuItem } from "./types/main";
export namespace Components {
    interface AppChart {
    }
    interface AppList {
    }
    interface AppRoot {
    }
    interface ExpenseForm {
        "editableExpense": Expense;
    }
    interface ExpenseLine {
        "amount": number;
        "date": string;
        "description": string;
        "expenseID": number;
    }
    interface ExpenseMenu {
        "menuItems": MenuItem[];
    }
    interface LoaderBall {
        "size": "default" | "small";
    }
    interface PlaceholderComp {
        "activeError": boolean;
    }
    interface ThemeSwitch {
    }
}
declare global {
    interface HTMLAppChartElement extends Components.AppChart, HTMLStencilElement {
    }
    var HTMLAppChartElement: {
        prototype: HTMLAppChartElement;
        new (): HTMLAppChartElement;
    };
    interface HTMLAppListElement extends Components.AppList, HTMLStencilElement {
    }
    var HTMLAppListElement: {
        prototype: HTMLAppListElement;
        new (): HTMLAppListElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLExpenseFormElement extends Components.ExpenseForm, HTMLStencilElement {
    }
    var HTMLExpenseFormElement: {
        prototype: HTMLExpenseFormElement;
        new (): HTMLExpenseFormElement;
    };
    interface HTMLExpenseLineElement extends Components.ExpenseLine, HTMLStencilElement {
    }
    var HTMLExpenseLineElement: {
        prototype: HTMLExpenseLineElement;
        new (): HTMLExpenseLineElement;
    };
    interface HTMLExpenseMenuElement extends Components.ExpenseMenu, HTMLStencilElement {
    }
    var HTMLExpenseMenuElement: {
        prototype: HTMLExpenseMenuElement;
        new (): HTMLExpenseMenuElement;
    };
    interface HTMLLoaderBallElement extends Components.LoaderBall, HTMLStencilElement {
    }
    var HTMLLoaderBallElement: {
        prototype: HTMLLoaderBallElement;
        new (): HTMLLoaderBallElement;
    };
    interface HTMLPlaceholderCompElement extends Components.PlaceholderComp, HTMLStencilElement {
    }
    var HTMLPlaceholderCompElement: {
        prototype: HTMLPlaceholderCompElement;
        new (): HTMLPlaceholderCompElement;
    };
    interface HTMLThemeSwitchElement extends Components.ThemeSwitch, HTMLStencilElement {
    }
    var HTMLThemeSwitchElement: {
        prototype: HTMLThemeSwitchElement;
        new (): HTMLThemeSwitchElement;
    };
    interface HTMLElementTagNameMap {
        "app-chart": HTMLAppChartElement;
        "app-list": HTMLAppListElement;
        "app-root": HTMLAppRootElement;
        "expense-form": HTMLExpenseFormElement;
        "expense-line": HTMLExpenseLineElement;
        "expense-menu": HTMLExpenseMenuElement;
        "loader-ball": HTMLLoaderBallElement;
        "placeholder-comp": HTMLPlaceholderCompElement;
        "theme-switch": HTMLThemeSwitchElement;
    }
}
declare namespace LocalJSX {
    interface AppChart {
    }
    interface AppList {
    }
    interface AppRoot {
    }
    interface ExpenseForm {
        "editableExpense"?: Expense;
        "onExpenseUpdate"?: (event: CustomEvent<Expense[]>) => void;
    }
    interface ExpenseLine {
        "amount"?: number;
        "date"?: string;
        "description"?: string;
        "expenseID"?: number;
        "onEditExpense"?: (event: CustomEvent<number>) => void;
        "onExpenseUpdate"?: (event: CustomEvent<void>) => void;
    }
    interface ExpenseMenu {
        "menuItems"?: MenuItem[];
    }
    interface LoaderBall {
        "size"?: "default" | "small";
    }
    interface PlaceholderComp {
        "activeError"?: boolean;
    }
    interface ThemeSwitch {
    }
    interface IntrinsicElements {
        "app-chart": AppChart;
        "app-list": AppList;
        "app-root": AppRoot;
        "expense-form": ExpenseForm;
        "expense-line": ExpenseLine;
        "expense-menu": ExpenseMenu;
        "loader-ball": LoaderBall;
        "placeholder-comp": PlaceholderComp;
        "theme-switch": ThemeSwitch;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-chart": LocalJSX.AppChart & JSXBase.HTMLAttributes<HTMLAppChartElement>;
            "app-list": LocalJSX.AppList & JSXBase.HTMLAttributes<HTMLAppListElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "expense-form": LocalJSX.ExpenseForm & JSXBase.HTMLAttributes<HTMLExpenseFormElement>;
            "expense-line": LocalJSX.ExpenseLine & JSXBase.HTMLAttributes<HTMLExpenseLineElement>;
            "expense-menu": LocalJSX.ExpenseMenu & JSXBase.HTMLAttributes<HTMLExpenseMenuElement>;
            "loader-ball": LocalJSX.LoaderBall & JSXBase.HTMLAttributes<HTMLLoaderBallElement>;
            "placeholder-comp": LocalJSX.PlaceholderComp & JSXBase.HTMLAttributes<HTMLPlaceholderCompElement>;
            "theme-switch": LocalJSX.ThemeSwitch & JSXBase.HTMLAttributes<HTMLThemeSwitchElement>;
        }
    }
}
